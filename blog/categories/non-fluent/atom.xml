<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: non-fluent | valerie]]></title>
  <link href="http://valerie.egrove.co.uk/blog/categories/non-fluent/atom.xml" rel="self"/>
  <link href="http://valerie.egrove.co.uk/"/>
  <updated>2013-07-09T20:01:20+01:00</updated>
  <id>http://valerie.egrove.co.uk/</id>
  <author>
    <name><![CDATA[egrove Ltd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simple Form (non-fluent) w/ Bootstrap]]></title>
    <link href="http://valerie.egrove.co.uk/blog/2013/07/07/simple-form-non-fluent-with-bootstrap/"/>
    <updated>2013-07-07T12:53:00+01:00</updated>
    <id>http://valerie.egrove.co.uk/blog/2013/07/07/simple-form-non-fluent-with-bootstrap</id>
    <content type="html"><![CDATA[<p>This code sample demonstrates <strong>valerie</strong> being used to validate a simple form.</p>

<p>Functionally it&rsquo;s the same as the
<a href="/blog/2013/07/05/simple-form-fluent-with-bootstrap/">Simple Form w/ Bootstrap sample </a>, but it uses the
non-fluent interface to configure the validation settings.</p>

<!-- more -->


<p>This sample can be seen running
<a href="http://jsfiddle.net/gh/gist/knockout/2.2.1/cc3403a597e3e7df3d60/" title="Simple Form (non-fluent) /w Bootstrap">here</a> â‡—.</p>

<h2>Javascript</h2>

<p><div><script src='https://gist.github.com/cc3403a597e3e7df3d60.js?file=fiddle.js'></script>
<noscript><pre><code>var viewModel = {
        &quot;firstName&quot;: ko.observable(),
        &quot;surname&quot;: ko.observable(),
        &quot;submit&quot;: function () {
            viewModel.validation().touched(true);
        },
        &quot;reset&quot;: function () {
            viewModel.firstName(&quot;&quot;);
            viewModel.surname(&quot;&quot;);
            viewModel.validation().touched(false);
        }
    },
    viewModelValidationState = valerie.validatableModel(viewModel);

viewModel.firstName.validate({
    // The passThrough converter is the default converter,
    // set here to illustrate the non-fluent interface.
    &quot;converter&quot;: valerie.converters.passThrough,
    &quot;required&quot;: true,
    &quot;rules&quot;: [
        new valerie.rules.StringLength(2, null)
    ]
});

viewModel.surname.validate({
    &quot;converter&quot;: valerie.converters.passThrough,
    &quot;required&quot;: true,
    &quot;rules&quot;: [
        new valerie.rules.StringLength(2, null)
    ]
});

viewModelValidationState.validateAll();

ko.bindingHandlers.validationCss.classNames.failed = &quot;error&quot;;
ko.bindingHandlers.validationCss.classNames.passed = &quot;success&quot;;

window.onload = function () {
    ko.applyBindings(viewModel, document.getElementById(&quot;sample&quot;));
}</code></pre></noscript></div>

&ndash; Lines <strong>15 &ndash; 23</strong> set the validation settings for the <code>firstName</code>  property
&ndash; Lines <strong>25 &ndash; 31</strong> set the validation settings for the <code>surname</code> property</p>
]]></content>
  </entry>
  
</feed>
